function [X, Y, yc] = naca4digit(digits, n, closed)
% NACA4DIGIT Coordinates of NACA 4 digit airfoil profile and camber line.
%   NACA4DIGIT(digits, n, closed) returns the coordinates of a NACA 4 digit
%   airfoil with leading edge at (0, 0) and trailing edge at (1, 0) 
%
%
    digits = num2str(digits);
    m = str2double(digits(1)) / 100;
    p = str2double(digits(2)) / 10;
    t = str2double(digits(3:4)) / 100;

    syms yc(x) Dyc(x) yt(x) yu(x) yl(x) xu(x) xl(x);
    syms xul(x) xur(x) xll(x) xlr(x);

    yc(x) = piecewise(x <= p, m/p^2 * (2*p*x-x^2), m/(1-p)^2 * (1-2*p + 2*p*x - x^2));
    Dyc(x) = diff(yc, x);

    if closed == true
        yt(x) = 5*t*(.2969*sqrt(x) - .1260*x - .3516*x^2 + .2843*x^3 - .1036*x^4);
    else
        yt(x) = 5*t*(.2969*sqrt(x) - .1260*x - .3516*x^2 + .2843*x^3 - .1015*x^4);
    end

    xur(x) = x - yt(x)*sin(atan(2*m/(1-p)^2 * (p-x)));
    xul(x) = x - yt(x)*sin(atan(2*m/p^2 * (p-x)));
    xlr(x) = x + yt(x)*sin(atan(2*m/(1-p)^2 * (p-x)));
    xll(x) = x + yt(x)*sin(atan(2*m/p^2 * (p-x)));
    
    yu(x) = yc(x) + yt(x)*cos(atan(Dyc(x)));
    yl(x) = yc(x) - yt(x)*cos(atan(Dyc(x)));
    
    n = n + 1;
    X = zeros(n, 1);
    Y = zeros(n, 1);

    i = 1;
    for th = linspace(0, -2*pi, n)
        X(i) = .5 * (1 + cos(th));
        
        if th > -pi
            if X(i) > p
                x = vpasolve(xlr == X(i), X(i));
            else
                x = vpasolve(xll == X(i), X(i));
            end
            Y(i) = yl(x);
        else
            if X(i) < p
                x = vpasolve(xur == X(i), X(i));
            else
                x = vpasolve(xul == X(i), X(i));
            end
            Y(i) = yu(x);
        end
        i = i+1;
    end
    
    if closed ~= true
        Y(1) = 0; Y(end) = 0;
    end
    
    X = X';
    Y = Y';

end